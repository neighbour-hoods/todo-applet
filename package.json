{
  "name": "todo-dev",
  "private": true,
  "workspaces": [
    "ui",
    "tests"
  ],
  "scripts": {
    "start": "dotenv -- npm run network",
    "dev": "dotenv -- npm run network:dev",
    "network:dev": "hc s clean && npm run build:test-happ && dotenv -- concurrently \"open-cli http://localhost:${UI_PORT} && cd ui && npm start\" \"dotenv -- npm run start:dev\"",
    "start:dev": "RUST_LOG=warn WASM_LOG=debug echo \"pass\" | hc s --piped -f=$ADMIN_PORT generate ./workdir/sensemaker-enabled/todo-sensemaker.happ --run $HC_PORT -a todo-sensemaker network mdns",
    "network": "hc s clean && npm run build:test-happ && concurrently \"npm run build:watch -w ui\" \"npm run launch:happ\"",
    "test": "npm run build:happ && npm t -w tests",
    "launch:happ": "RUST_LOG=warn echo \"pass\" | hc launch --piped -n $AGENTS ./workdir/sensemaker-enabled/todo-sensemaker.happ --ui-path ui/dist network mdns",
    "package": "npm run build:happ && npm run package:ui -w ui && hc web-app pack workdir",
    "build:happ": "npm run build:dnas && hc app pack ./workdir",
    "build:test-happ": "npm run download-sensemaker && npm run build:dnas && hc app pack ./workdir/sensemaker-enabled",
    "build:dnas": "npm run build:zomes && hc dna pack ./dna/workdir",
    "build:zomes": "CARGO_TARGET_DIR=target cargo build --release --target wasm32-unknown-unknown",
    "download-sensemaker": "rimraf workdir/sensemaker.dna && curl -L --output workdir/sensemaker.dna https://github.com/neighbour-hoods/sensemaker-lite/releases/download/v0.0.8-alpha/sensemaker.dna; exit 0",
    "clean": "rimraf workdir/sensemaker.dna; rimraf ui/node_modules; rimraf node_modules"
  },
  "devDependencies": {
    "@holochain-playground/cli": "^0.0.11",
    "concurrently": "^6.2.1",
    "concurrently-repeat": "^0.0.1",
    "cross-env": "^7.0.3",
    "new-port-cli": "^1.0.0",
    "open-cli": "^7.2.0",
    "rimraf": "^3.0.2",
    "dotenv-cli": "^7.2.1",
    "run-singleton-cli": "^0.0.5"
  },
  "engines": {
    "npm": ">=7.0.0"
  }
}
